{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","releases","windowsRelease","linuxRelease","macRelease","this","getReleases","setState","fileName","Axios","get","Request","RequestData","data","ReleaseResource","version","console","log","generateReleaseUrl","className","src","alt","data-uk-dropdown","href","Date","getFullYear","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ecb1c68.chunk.js","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\"\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      releases: {\n        windowsRelease: 'https://github.com/kimitzu/kimitzu-client/releases/latest',\n        linuxRelease: 'https://github.com/kimitzu/kimitzu-client/releases/latest',\n        macRelease: 'https://github.com/kimitzu/kimitzu-client/releases/latest'\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const releases = await this.getReleases()\n    this.setState({\n      releases\n    })\n  }\n\n  generateReleaseUrl(fileName) {\n    return `https://github.com/kimitzu/kimitzu-client/releases/latest/download/${fileName}`\n  }\n\n  async getReleases() {\n    const Request = await Axios.get('/release/latest')\n    const RequestData = Request.data\n    const ReleaseResource = RequestData.version\n    console.log(ReleaseResource)\n\n    const windowsRelease = this.generateReleaseUrl(`kimitzu-client-setup-${ReleaseResource}.exe`)\n    const linuxRelease = this.generateReleaseUrl(`Kimitzu-Client-${ReleaseResource}.AppImage`)\n    const macRelease = this.generateReleaseUrl(`Kimitzu-Client-${ReleaseResource}.dmg`)\n\n    return {\n      windowsRelease, linuxRelease, macRelease\n    }\n  }\n\n  render() {\n    const { releases } = this.state\n    return (\n      <div className=\"main-content-container\">\n        <div className=\"first-section-cont\">\n          <img src=\"Background-wave.svg\" alt=\"background-wave\" className=\"background-wave-logo\" />\n          <img src=\"Background-wave-small.svg\" alt=\"background-wave\" className=\"background-wave-logo-small\" />\n          <img src=\"kimitzu-var-b.svg\" alt=\"kimitzu logo\" className=\"main-logo\" />\n          <p className=\"word-logo\">kimitzu</p>\n          <p className=\"sub-title\">A free market for services</p>\n          <div className=\"buttons-row-start\">\n            <a className=\"blue-round-button\">\n              <div className=\"aligned-download-btn\">\n                DOWNLOAD\n            <img src=\"Download-Arrow.svg\" alt=\"download-arrow\" className=\"download-arrow\" />\n              </div>\n            </a>\n            <div data-uk-dropdown=\"mode: click\">\n              <div className=\"row-download-icons\">\n                <a className=\"icon-container-download\" href={releases.windowsRelease}>\n                  <img src=\"windows.svg\" alt=\"download-arrow\" className=\"download-os\" />\n                  Windows\n              </a>\n                <a className=\"icon-container-download middle-download-logo\" href={releases.macRelease}>\n                  <img src=\"Apple.svg\" alt=\"download-arrow\" className=\"download-os\" />\n                  Mac\n              </a>\n                <a className=\"icon-container-download\" href={releases.linuxRelease}>\n                  <img src=\"linux.svg\" alt=\"download-arrow\" className=\"download-os\" />\n                  Linux\n              </a>\n              </div>\n            </div>\n            <a className=\"outlined-button colored-small\" href=\"https://test.kimitzu.ch/\">DEMO</a>\n            <a className=\"outlined-button\" href=\"https://github.com/kimitzu\">GITHUB</a>\n          </div>\n          <div className=\"links-row\">\n            <a className=\"row-icons\" href=\"https://github.com/kimitzu/kimitzu-client/releases\">\n              <img src=\"version.svg\" alt=\"version-logo\" className=\"margin-icons\" />\n              Releases\n          </a>\n            <a className=\"row-icons\" href=\"https://www.reddit.com/r/kimitzu/\">\n              <img src=\"reddit.svg\" alt=\"version-logo\" className=\"margin-icons\" />\n              r/kimitzu\n          </a>\n            <a className=\"row-icons\" href=\"https://github.com/kimitzu/kimitzu-client/issues\">\n              <img src=\"github.svg\" alt=\"version-logo\" className=\"margin-icons\" />\n              Contribute\n          </a>\n          </div>\n        </div>\n        <div className=\"second-section-cont\">\n          <div className=\"sec-left-section\">\n            <p>\n              Kimitzu is an app intended to create a free, two way marketplace for freelancers and their customers. Our goal is to help freelancers and their customers to find each other, manage payments, and incentivize good behavior on both sides of the transaction. Imagine Upwork or freelancer.com, but with:\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Privacy.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Privacy\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"First.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              First tier support for cryptocurrency payments\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Freedom.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Freedom to operate your business as you see fit\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Access.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Full access to clients\n            </p>\n            <p>\n              Don't like how we do things? As open source software, Kimitzu provides the freedom to run, view, modify, and share the code (the Four Freedoms)\n            </p>\n            <p>\n              There are also currently no fees. However, we may introduce some kind of fees in the future so as to finance the ongoing development and maintenance of the software. If we do introduce such fees in the future, it will be with plenty of warning.\n            </p>\n          </div>\n          <div className=\"sec-right-section\">\n            <img src=\"Kimitzu-spotlight.png\" alt=\"version-logo\" className=\"spotlight-one\" />\n          </div>\n        </div>\n        <div className=\"spotlight-one-small\">\n          <img src=\"Kimitzu-spotlight.png\" alt=\"version-logo\" className=\"spotlight-one\" />\n        </div>\n        <div className=\"second-section-cont\">\n          <div className=\"sec-right-section\">\n            <img src=\"spotlight-2.png\" alt=\"version-logo\" className=\"spotlight-one\" />\n          </div>\n          <div className=\"sec-left-section\">\n            <p>\n              The Kimitzu project also aspires to treat our users, developers, and other community members well at all times. For us, that means:\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Security.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Strong security\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"UI.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Beautiful UI\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Githublist.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Open source license\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Reward.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Meritocratic reward / governance structure\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Decentralized.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Decentralized control\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"design.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              No “dark” design patterns\n            </p>\n            <p className=\"list-icon\">\n              <img src=\"Open.svg\" alt=\"version-logo\" className=\"list-icons-svg\" />\n              Open book management\n            </p>\n            <p>\n              It’s our philosophy that if we a) treat everyone well b) implement good processes and c) get the incentives right, the community and software will grow in a mutual reinforcing virtuous spiral.\n            </p>\n          </div>\n        </div>\n        <div className=\"spotlight-two-small\">\n          <img src=\"spotlight-2.png\" alt=\"version-logo\" className=\"spotlight-one\" />\n        </div>\n        <div className=\"third-section-cont\">\n          <div>\n            <p className=\"title-bold\">How is Kimitzu related to OpenBazaar?</p>\n            <p>\n              Kimitzu is built on top of OpenBazaar so, behind the scenes, Kimitzu uses that same payment system, IPFS listings, etc as the OpenBazaar app.\n        </p>\n            <p>\n              However, Kimitzu adds adds an additional layer to provide services not currently offered by OpenBazaar:\n        </p>\n            <ul className=\"ul-padding\">\n              <li>\n                OpenBazaar is focused on both goods and services; Kimitzu is focused only on service listings.\n          </li>\n              <li>\n                Openbazaar depends on third parties to provide search. Kimitzu has a built-in search engine that a provides:\n            <ul className=\"ul-padding-inner\">\n                  <li>Location-based search</li>\n                  <li>Structured search by occupation (based on <a className=\"text-underline\" href=\"https://www.ilo.org/public/english/bureau/stat/isco/isco08/index.htm\">ISCO-08</a>)</li>\n                  <li>Structured search filters based on ratings, price, physical traits, and social traits</li>\n                </ul>\n              </li>\n              <li>\n                Detailed competency matrix for software developers (other professions to be added later)\n          </li>\n              <li>\n                Openbazaar only provides ratings for vendors, and can be deleted or modified by a vendor. Kimitzu ratings are immutable, and allow both buyer and seller to rate each other.\n          </li>\n              <li>\n                Openbazaar has an Android app. Kimitzu doesn't yet support the Android platform.\n          </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <hr />\n          <p>© {new Date().getFullYear()} Kimitzu Foundation</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}